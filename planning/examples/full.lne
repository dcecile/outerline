# Welcome to Outerline

(use; special)

(def; variables; are defined)

(say; {they are (variables) before they are used})

(def proc; f; x;
  (map;
    (proc; y; {(y)...(x)}),
    1, 2, 3, 4))

(say; {some (cat;
  {interpolation (cat; # Great
    is, tricky) so}, must) be careful})

(when;
  (true),
    2;
  else,
    3, (false))

#(#

Even def is hidden inside a comment block.

#)#

(say; (join; { }, (functions; y)))

(
  {
    }
  ((
    {
      })
    (
      )))

#(#
And
#(#
finally, the
#)#
recursive
#)#
(comment)
